{"version":3,"sources":["EmployeeList.js","App.js","index.js"],"names":["EmployeeList","useState","justmockUserData","setJustmockUserData","total","setTotal","useEffect","fetch","then","response","json","console","log","className","map","eachData","username","value","pay","onChange","e","event","userId","target","tempState","tempTotal","forEach","id","Number","setPay","App","rootElement","document","getElementById","createRoot","render"],"mappings":"uNAGe,SAASA,IAatB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WAC2B,qBAAxBH,GACXI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLN,EAAoBM,QAEvB,IAEHE,QAAQC,IAAI,eAAgBV,GAuB5B,OACE,sBAAKW,UAAU,eAAf,UACGX,GACCA,EAAiBY,KAAI,SAACC,GAAD,OACnB,qCACE,8BAAMA,EAASC,WACf,uBACEC,MAAOF,EAASG,IAChBC,SAAU,SAACC,GAAD,OA7BP,SAACC,EAAOC,GACrBX,QAAQC,IAAI,YAAaS,EAAME,OAAON,OACtC,IAAMO,EAAYtB,EACduB,EAAYrB,EAChBoB,EAAUE,SAAQ,SAACX,GACjB,IAAQY,EAAOZ,EAAPY,GACRhB,QAAQC,IAAIe,EAAIL,GACZA,IAAWK,IACbZ,EAAQ,IAAUa,OAAOP,EAAME,OAAON,QAGpCF,EAASG,MACXP,QAAQC,IAAI,WAAYG,EAASG,KACjCO,GAAaV,EAASG,QAG1BP,QAAQC,IAAI,oBAAqBY,GACjCrB,EAAoBqB,GACpBnB,EAASoB,GAWkBI,CAAOT,EAAGL,EAASY,aAI5C,8BACE,+BAAOvB,SC7DA,SAAS0B,IACtB,OACE,sBAAKjB,UAAU,MAAf,UACE,uDACA,cAACb,EAAD,OCFN,IAAM+B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACL,EAAD,S","file":"static/js/main.b1322dcf.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getMockData } from \"./GetData\";\r\n\r\nexport default function EmployeeList() {\r\n  /**\r\n   * To get a list of employees, make a GET request to:\r\n   * \"https://jsonplaceholder.typicode.com/users\"\r\n   *\r\n   * fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n   * \r\n   *     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n   *\r\n   */\r\n\r\n  const [justmockUserData, setJustmockUserData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (typeof setJustmockUserData === \"undefined\") return;\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setJustmockUserData(response);\r\n      });\r\n  }, []);\r\n\r\n  console.log(\"element data\", justmockUserData);\r\n\r\n  const setPay = (event, userId) => {\r\n    console.log(\"pay value\", event.target.value);\r\n    const tempState = justmockUserData;\r\n    let tempTotal = total;\r\n    tempState.forEach((eachData) => {\r\n      const { id } = eachData;\r\n      console.log(id, userId);\r\n      if (userId === id) {\r\n        eachData[\"pay\"] = Number(event.target.value);\r\n      }\r\n\r\n      if (eachData.pay) {\r\n        console.log(\"each pay\", eachData.pay);\r\n        tempTotal += eachData.pay;\r\n      }\r\n    });\r\n    console.log(\"new data with pay\", tempState);\r\n    setJustmockUserData(tempState);\r\n    setTotal(tempTotal);\r\n  };\r\n\r\n  return (\r\n    <div className=\"EmployeeList\">\r\n      {justmockUserData &&\r\n        justmockUserData.map((eachData) => (\r\n          <>\r\n            <div>{eachData.username}</div>\r\n            <input\r\n              value={eachData.pay}\r\n              onChange={(e) => setPay(e, eachData.id)}\r\n            />\r\n          </>\r\n        ))}\r\n      <div>\r\n        <span>{total}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport EmployeeList from \"./EmployeeList\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Justmocks Pay Center </h1>\n      <EmployeeList />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}